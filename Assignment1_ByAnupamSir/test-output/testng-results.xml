<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-18T21:47:00 IST" name="Default suite" finished-at="2021-12-18T21:49:26 IST" duration-ms="146665">
    <groups>
    </groups>
    <test started-at="2021-12-18T21:47:00 IST" name="Default test" finished-at="2021-12-18T21:49:26 IST" duration-ms="146665">
      <class name="com.apptad.test.RegisterUserTest">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:47:00 IST" name="setExtent" finished-at="2021-12-18T21:47:01 IST" duration-ms="985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:47:01 IST" name="beforeTest" finished-at="2021-12-18T21:47:03 IST" duration-ms="2667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="newUserEmail_Test_02()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:47:03 IST" name="newUserEmail_Test_02" finished-at="2021-12-18T21:47:26 IST" duration-ms="22275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newUserEmail_Test_02 -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:47:26 IST" name="afterTest" finished-at="2021-12-18T21:47:29 IST" duration-ms="2992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newUserEmail_Test_02 status=SUCCESS method=RegisterUserTest.newUserEmail_Test_02()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:47:29 IST" name="beforeTest" finished-at="2021-12-18T21:47:30 IST" duration-ms="1627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="newUser_Test_01()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:47:30 IST" name="newUser_Test_01" finished-at="2021-12-18T21:48:27 IST" duration-ms="56262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newUser_Test_01 -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:48:27 IST" name="afterTest" finished-at="2021-12-18T21:48:29 IST" duration-ms="2643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newUser_Test_01 status=SUCCESS method=RegisterUserTest.newUser_Test_01()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:48:29 IST" name="beforeTest" finished-at="2021-12-18T21:48:31 IST" duration-ms="1792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="validateFormat_Test_04()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:48:31 IST" name="validateFormat_Test_04" finished-at="2021-12-18T21:48:31 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at com.apptad.test.RegisterUserTest.validateFormat_Test_04(RegisterUserTest.java:172)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFormat_Test_04 -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:48:31 IST" name="afterTest" finished-at="2021-12-18T21:48:33 IST" duration-ms="2455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFormat_Test_04 status=FAILURE method=RegisterUserTest.validateFormat_Test_04()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:48:33 IST" name="beforeTest" finished-at="2021-12-18T21:48:35 IST" duration-ms="1452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="validateManFields_Test_03()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:48:35 IST" name="validateManFields_Test_03" finished-at="2021-12-18T21:49:23 IST" duration-ms="48423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateManFields_Test_03 -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:49:23 IST" name="afterTest" finished-at="2021-12-18T21:49:26 IST" duration-ms="2554" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateManFields_Test_03 status=SUCCESS method=RegisterUserTest.validateManFields_Test_03()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.apptad.test.RegisterUserTest@7e7be63f]" started-at="2021-12-18T21:49:26 IST" name="endReport" finished-at="2021-12-18T21:49:26 IST" duration-ms="457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.apptad.test.RegisterUserTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
